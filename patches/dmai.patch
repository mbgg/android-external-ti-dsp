# Copyright (C) 2010 Yegor Yelizarov <yegor.yelizarov@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


diff -ruN a/dmai_2_05_00_12/packages/config.bld b/dmai_2_05_00_12/packages/config.bld
--- a/dmai_2_05_00_12/packages/config.bld	2010-05-28 18:33:42.000000000 +0400
+++ b/dmai_2_05_00_12/packages/config.bld	2010-07-06 18:55:24.942772192 +0400
@@ -68,10 +68,11 @@
 }
 
 /* location of the GCC Arm9 tools */
-var GCArmv5T = xdc.useModule('gnu.targets.arm.GCArmv5T');
-GCArmv5T.LONGNAME = longName;
-GCArmv5T.platform = java.lang.System.getenv("PLATFORM_XDC");
-GCArmv5T.rootDir = tooldir;
+var GCArmv7A = xdc.useModule('gnu.targets.arm.GCArmv7A');
+GCArmv7A.LONGNAME = longName;
+GCArmv7A.platform = java.lang.System.getenv("PLATFORM_XDC");
+GCArmv7A.rootDir = tooldir;
+GCArmv7A.ccOpts.prefix += " -Wall -fno-strict-aliasing " + java.lang.System.getenv("ANDROID_CFLAGS");
 
 Build.targets = [
 ];
diff -ruN a/dmai_2_05_00_12/packages/ti/sdo/dmai/apps/app_common.cfg b/dmai_2_05_00_12/packages/ti/sdo/dmai/apps/app_common.cfg
--- a/dmai_2_05_00_12/packages/ti/sdo/dmai/apps/app_common.cfg	2010-05-28 18:33:42.000000000 +0400
+++ b/dmai_2_05_00_12/packages/ti/sdo/dmai/apps/app_common.cfg	2010-07-06 18:55:24.942772192 +0400
@@ -59,7 +59,7 @@
 /* Load support for the Codec Engine OS Abstraction Layer */
 var osalGlobal = xdc.useModule( 'ti.sdo.ce.osal.Global' );
 
-if (prog.build.target.isa == "v5t" || prog.build.target.isa == "v5T") {
+if (prog.build.target.isa == "v5t" || prog.build.target.isa == "v5T" || prog.build.target.isa == "v7A") {
     if (prog.platformName == "ti.platforms.evmDM355") {
         /* Configure the OSAL to use it's Linux version */
         osalGlobal.runtimeEnv = osalGlobal.LINUX;
diff -ruN a/dmai_2_05_00_12/packages/ti/sdo/dmai/apps/Makefile.app b/dmai_2_05_00_12/packages/ti/sdo/dmai/apps/Makefile.app
--- a/dmai_2_05_00_12/packages/ti/sdo/dmai/apps/Makefile.app	2010-05-28 18:33:42.000000000 +0400
+++ b/dmai_2_05_00_12/packages/ti/sdo/dmai/apps/Makefile.app	2010-07-06 18:55:30.939972206 +0400
@@ -35,8 +35,8 @@
     DMAI_INSTALL_DIR = ../../../../../..
 endif
 
-include $(DMAI_INSTALL_DIR)/Rules.make
-include $(DMAI_INSTALL_DIR)/Platform.make
+#include $(DMAI_INSTALL_DIR)/Rules.make
+#include $(DMAI_INSTALL_DIR)/Platform.make
 
 # Convert platform specific variables to general variables
 CE_INSTALL_DIR		 = $(strip $(CE_INSTALL_DIR_$(PLATFORM)))
@@ -114,13 +114,13 @@
 
 CPP_FLAGS	+= $(PLATFORM_CPPFLAGS)
 
-GCC_C_FLAGS 	= $(C_FLAGS) -Wall -Werror
+GCC_C_FLAGS 	= $(C_FLAGS) -Wall $(ANDROID_CFLAGS)
 C64P_C_FLAGS	= $(C_FLAGS)
 
 GCC_CPP_FLAGS  	= $(CPP_FLAGS) -I$(LINUXKERNEL_INSTALL_DIR)/include
 C64P_CPP_FLAGS	= $(CPP_FLAGS) -pdse225 -I$(CODEGEN_INSTALL_DIR)/include -mv6400+ -I$(BIOS_INSTALL_DIR)/packages/ti/bios/include -eo$(PLATFORM_DEVICE).o$(EXT)
 
-GCC_LD_FLAGS	= $(LD_FLAGS) -lpthread -lm -L$(LINUXLIBS_INSTALL_DIR)/lib -lasound
+GCC_LD_FLAGS	= $(LD_FLAGS) -lcutils -lm -L$(LINUXLIBS_INSTALL_DIR)/lib -lasound $(ANDROID_LDFLAGS)
 C64P_LD_FLAGS	= $(LD_FLAGS) -z -w -x -c -i$(RTDX_INSTALL_DIR)/packages/ti/rtdx/iom/lib/debug -i$(RTDX_INSTALL_DIR)/packages/ti/rtdx/cio/lib/release -i$(RTDX_INSTALL_DIR)/packages/ti/rtdx/lib/c6000 
 
 SOURCES 	= $(wildcard *.c)
diff -ruN a/dmai_2_05_00_12/packages/ti/sdo/dmai/ce/Vdec2.c b/dmai_2_05_00_12/packages/ti/sdo/dmai/ce/Vdec2.c
--- a/dmai_2_05_00_12/packages/ti/sdo/dmai/ce/Vdec2.c	2010-05-28 18:33:42.000000000 +0400
+++ b/dmai_2_05_00_12/packages/ti/sdo/dmai/ce/Vdec2.c	2010-07-06 18:55:24.943752846 +0400
@@ -136,6 +136,16 @@
         outBufPtrArray[0]       = dstPtr;
         outBufSizeArray[0]      = hVd->minOutBufSize[0];
     }
+    else if (BufferGfx_getColorSpace(hDstBuf) == ColorSpace_YUV420P) {
+        outBufPtrArray[0]       = dstPtr;
+        outBufSizeArray[0]      = hVd->minOutBufSize[0];
+
+        outBufPtrArray[1]       = dstPtr + Buffer_getSize(hDstBuf) * 2 / 3;
+        outBufSizeArray[1]      = hVd->minOutBufSize[1];
+
+        outBufPtrArray[2]       = dstPtr + Buffer_getSize(hDstBuf) * 5 / 6;
+        outBufSizeArray[2]      = hVd->minOutBufSize[2];
+    }
     else {
         Dmai_err0("Unsupported color format of destination buffer\n");
         return Dmai_EINVAL;
diff -ruN a/dmai_2_05_00_12/packages/ti/sdo/dmai/linux/Cpu.c b/dmai_2_05_00_12/packages/ti/sdo/dmai/linux/Cpu.c
--- a/dmai_2_05_00_12/packages/ti/sdo/dmai/linux/Cpu.c	2010-05-28 18:33:42.000000000 +0400
+++ b/dmai_2_05_00_12/packages/ti/sdo/dmai/linux/Cpu.c	2010-07-06 18:55:24.943752846 +0400
@@ -106,6 +106,7 @@
     }
     else if ((strcmp(valBuf,"OMAP3EVM Board") == 0) ||
             (strcmp(valBuf, "OMAP3 EVM") == 0) ||
+            (strcmp(valBuf, "IGEP v2 board") == 0) ||
             (strcmp(valBuf, "OMAP3 Beagle Board") == 0)) {
             *device = Cpu_Device_OMAP3530;
     }
diff -ruN a/dmai_2_05_00_12/packages/ti/sdo/dmai/linux/Display.c b/dmai_2_05_00_12/packages/ti/sdo/dmai/linux/Display.c
--- a/dmai_2_05_00_12/packages/ti/sdo/dmai/linux/Display.c	2010-05-28 18:33:42.000000000 +0400
+++ b/dmai_2_05_00_12/packages/ti/sdo/dmai/linux/Display.c	2010-07-06 18:55:24.943752846 +0400
@@ -353,7 +353,7 @@
 /******************************************************************************
  * readOutputDevice
  *****************************************************************************/
-static Int readOutputDevice (Display_Output *displayOutput)
+Int readOutputDevice (Display_Output *displayOutput)
 {
     Char device[READ_BUFFER_SIZE];
 
@@ -437,6 +437,61 @@
     
 
 }
+
+Int detectVideoStdType (VideoStd_Type *videoStdType)
+{
+    Char buffer[READ_BUFFER_SIZE];
+    Char *display, *pBuffer, *height, *width, *enabled;
+
+    *videoStdType = VideoStd_AUTO;
+
+    /* Read Displays in sysfs file */
+    if ( _Dmai_readSysFs(SYSFS_MANAGER0_DISPLAY, buffer, 
+                                        READ_BUFFER_SIZE) < 0) {
+        Dmai_err1("Failed to read %s\n", SYSFS_MANAGER0_DISPLAY);
+        return Dmai_EIO;
+    }
+
+    pBuffer = buffer;
+    display = strtok(pBuffer, "\n");
+
+    while (display){
+        pBuffer += strlen(display)+1;
+
+        strtok(display, " ");
+        enabled = strtok(NULL, " ");
+
+        strtok(NULL, " ");
+        strtok(NULL, " ");
+        width = strtok(NULL, " ");
+        height = strtok(NULL, " ");
+
+        if (!width || !height || !enabled){
+            Dmai_err0("Error while detecting Video Standard\n");
+            return Dmai_EFAIL;
+        }
+
+        /* Check the setting for the current enabled Display Device to use them */
+        if (strchr(enabled, '1')){
+             /* Use the height Setting for Autodetecting Video Std */
+            if (strspn(width, "h:640") == 5 && strspn(height, "v:480") == 5)
+                *videoStdType = VideoStd_VGA;
+            else if (strspn(width, "h:720") == 5 && strspn(height, "v:480") == 5)
+                *videoStdType = VideoStd_480P;
+            else if (strspn(width, "h:720") == 5 && strspn(height, "v:576") == 5)
+                *videoStdType = VideoStd_576P;
+            else if (strspn(width, "h:1280") == 6 && strspn(height, "v:720") == 5)
+                *videoStdType = VideoStd_720P_60;
+        }
+
+        display = strtok( pBuffer  , "\n" );
+    }
+
+    if (*videoStdType != VideoStd_AUTO)
+        return Dmai_EOK;
+    else
+        return Dmai_EFAIL;
+}
 #endif
 
 /******************************************************************************
diff -ruN a/dmai_2_05_00_12/packages/ti/sdo/dmai/linux/Display_fbdev.c b/dmai_2_05_00_12/packages/ti/sdo/dmai/linux/Display_fbdev.c
--- a/dmai_2_05_00_12/packages/ti/sdo/dmai/linux/Display_fbdev.c	2010-05-28 18:33:42.000000000 +0400
+++ b/dmai_2_05_00_12/packages/ti/sdo/dmai/linux/Display_fbdev.c	2010-07-06 18:55:24.944777414 +0400
@@ -134,7 +134,7 @@
     Int                      displaySize;
     Int                      bufIdx;
     Int8                    *virtPtr;
-    Int32                    physPtr;
+    Int32                    physPtr = 0;
     Int                      height, width;
     Display_Handle           hDisplay;
     Buffer_Handle            hBuf;
diff -ruN a/dmai_2_05_00_12/packages/ti/sdo/dmai/linux/priv/_Display.h b/dmai_2_05_00_12/packages/ti/sdo/dmai/linux/priv/_Display.h
--- a/dmai_2_05_00_12/packages/ti/sdo/dmai/linux/priv/_Display.h	2010-05-28 18:33:42.000000000 +0400
+++ b/dmai_2_05_00_12/packages/ti/sdo/dmai/linux/priv/_Display.h	2010-07-06 18:55:24.944777414 +0400
@@ -51,4 +51,18 @@
                             Int *rotation);
 int _Display_enableDevice(Display_Attrs *attrs, Bool Enable);
 
+typedef enum {
+    _Display_Device_FB0,
+    _Display_Device_VID1,
+    _Display_Device_VID2
+}_Display_Device;
+
+#if defined (__cplusplus)
+extern "C" {
+#endif
+extern Int readOutputDevice(Display_Output *displayOutput);
+extern Int detectVideoStdType(VideoStd_Type *videoStdType);
+#if defined (__cplusplus)
+}
+#endif
 #endif // ti_sdo_dmai_Display_h_
diff -ruN a/dmai_2_05_00_12/packages/ti/sdo/dmai/Makefile b/dmai_2_05_00_12/packages/ti/sdo/dmai/Makefile
--- a/dmai_2_05_00_12/packages/ti/sdo/dmai/Makefile	2010-05-28 18:33:42.000000000 +0400
+++ b/dmai_2_05_00_12/packages/ti/sdo/dmai/Makefile	2010-07-06 18:55:24.944777414 +0400
@@ -103,11 +103,10 @@
 
 CPP_FLAGS	+= -I$(XDC_INSTALL_DIR)/packages -I$(DMAI_INSTALL_DIR)/packages -I$(CE_INSTALL_DIR)/packages -I$(FC_INSTALL_DIR)/packages -I$(XDAIS_INSTALL_DIR)/packages -I$(CODEC_INSTALL_DIR)/packages -DDmai_Device_$(PLATFORM_DEVICE)
 
-GCC_CPP_FLAGS += $(CPP_FLAGS) -I$(LINUXKERNEL_INSTALL_DIR)/include -I$(LINUXKERNEL_INSTALL_DIR)/arch/arm/$(PLATFORM_ARCH)/include -I$(LINUXKERNEL_INSTALL_DIR)/arch/arm/include $(HAVE_AUTOCONFIG) -I$(CMEM_INSTALL_DIR)/packages -I$(LINK_INSTALL_DIR)/packages -DDmai_BuildOs_linux -Dxdc_target_types__=gnu/targets/std.h -I$(LINUXLIBS_INSTALL_DIR)/include -Dxdc_target_name__=arm/GCArmv5T
+GCC_CPP_FLAGS += $(CPP_FLAGS) -I$(LINUXKERNEL_INSTALL_DIR)/include -I$(LINUXKERNEL_INSTALL_DIR)/arch/arm/$(PLATFORM_ARCH)/include -I$(LINUXKERNEL_INSTALL_DIR)/arch/arm/include $(HAVE_AUTOCONFIG) -I$(CMEM_INSTALL_DIR)/packages -I$(LINK_INSTALL_DIR)/packages -DDmai_BuildOs_linux -Dxdc_target_types__=gnu/targets/std.h -I$(LINUXLIBS_INSTALL_DIR)/include -Dxdc_target_name__=arm/GCArmv7A
 C64P_CPP_FLAGS	+= $(CPP_FLAGS) -I$(BIOS_INSTALL_DIR)/packages/ti/bios/include -I$(BIOS_INSTALL_DIR)/packages -DDmai_BuildOs_bios -Dxdc_target__='<ti/targets/std.h>' -I$(CODEGEN_INSTALL_DIR)/include -mv6400+ -pdse225 -eo$(PLATFORM_DEVICE).o$(EXT)
 
-
-GCC_C_FLAGS	+= $(C_FLAGS) -Wall -Werror
+GCC_C_FLAGS	+= $(C_FLAGS) -Wall $(ANDROID_CFLAGS)
 C64P_C_FLAGS	+= $(C_FLAGS)
 
 GNU_AR_FLAGS	+= $(AR_FLAGS)
diff -ruN a/dmai_2_05_00_12/packages/ti/sdo/dmai/package.xs b/dmai_2_05_00_12/packages/ti/sdo/dmai/package.xs
--- a/dmai_2_05_00_12/packages/ti/sdo/dmai/package.xs	2010-05-28 18:33:42.000000000 +0400
+++ b/dmai_2_05_00_12/packages/ti/sdo/dmai/package.xs	2010-07-06 18:55:24.944777414 +0400
@@ -74,7 +74,8 @@
         /* Primitive compatiblity check for older XDC tools than 3.05 */
         if (prog.build.target.suffix == "470MV" ||
             prog.build.target.suffix == "v5t" ||
-            prog.build.target.suffix == "v5T") {
+            prog.build.target.suffix == "v5T" ||
+	    prog.build.target.suffix == "v7A") {
 
             suffix = "470MV";
         } 
diff -ruN a/dmai_2_05_00_12/Platform.make b/dmai_2_05_00_12/Platform.make
--- a/dmai_2_05_00_12/Platform.make	2010-05-28 18:33:41.000000000 +0400
+++ b/dmai_2_05_00_12/Platform.make	2010-07-06 18:55:24.944777414 +0400
@@ -72,6 +72,6 @@
 PLATFORM_OS_o3530_al            = linux
 PLATFORM_DEVICE_o3530_al        = omap3530
 PLATFORM_PERIPHERALS_o3530_al   = $(PLATFORM_DEVICE)
-PLATFORM_XDC_TARGET_o3530_al    = gnu.targets.arm.GCArmv5T
+PLATFORM_XDC_TARGET_o3530_al    = gnu.targets.arm.GCArmv7A
 PLATFORM_XDC_o3530_al           = ti.platforms.evm3530
 
